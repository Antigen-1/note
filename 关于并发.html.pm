#lang pollen/markup
◊h1{关于并发}

◊p{一般而言，并发是指将一个任务切分成不同的部分，互相间通过同步形成先后顺序。}

◊p{对于Racket而言，线程不在OS水平上，因此在同一个Racket place当中，线程必须来回切换执行。}

◊p{由此可见，并发的额外性能开销主要来自线程间频繁的切换和同步；而其带来的性能提升就来自于对于“等待”和“执行”——即此进程依赖但不亲自执行的任务及需要其亲自执行的任务——的区分和“错开”，而其方式恰恰就是线程的切换和同步。}

◊p{因此并发要取得最佳的性能，就必须做到两点：◊lst{
ul
任务的各个部分的进度不能完全同步，但是又不能完全不同步。若完全同步上限就是串行，完全不同步时则很可能导致同一时刻多个线程竞争，使得计算和内存等资源利用效率低下
分割后要注意各个步骤之间相对的快慢，并据此合理安排其之间的顺序，同样也是避免串行和竞争}}

